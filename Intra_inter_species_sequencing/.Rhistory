xlab("Species") +
ylab("total AAACTAC span (bp)") +
theme(axis.text.x = element_text(hjust = 1, size=12)) +
theme(text = element_text(size=12))
ggplot(data = data_classified, aes(x = species, y = AAACTAC*7)) +
geom_boxplot() +
geom_jitter(color="coral2") +
theme_bw() +
xlab("Species") +
ylab("total AAACTAC span (bp)") +
theme(axis.text.x = element_text(hjust = 1, size=12)) +
theme(text = element_text(size=12))
samples_depth <- read.csv ('/Users/jullienflynn/Documents/AndyLab/Heterochromatin/PacBio_scripts/Revised_scripts/D_virilis_satellites/Intra_inter_species_sequencing/ForR/samples_depth.csv')
sample_names <- samples_depth$Sample
samples_depth[,1] <- NULL
rownames(samples_depth) <- sample_names
#now bring in the compiled data.
data2 <- read.delim ('/Users/jullienflynn/Documents/AndyLab/Heterochromatin/PacBio_scripts/Revised_scripts/D_virilis_satellites/Intra_inter_species_sequencing/ForR/Dvir_diversity.rep.compiled')
kmer.labels <- sapply(strsplit(colnames(data2), "\\."), '[', 1)
colnames(data2) <- kmer.labels
samples <- as.vector(data2$lines)
samples2 <- sapply(strsplit(samples, "[.]"), '[', 1)
#samples2
data2[,1] <- NULL
rownames(data2) <- samples2
# put the depths in the same order as the dataframe
data2_ordered <- data2[ order(row.names(data2)), ]
samples_depth_ordered <- samples_depth[ order(row.names(samples_depth)), ]
# now normalize the data
data2_normalized <- data2_ordered/samples_depth_ordered
# now sort the data
kmer_means <- colMeans(data2)
data2_normalized_sorted <- data2_normalized[,order(kmer_means, decreasing=T)]
# now bring in the sample identities
sample_identities <- read.table ('/Users/jullienflynn/Documents/AndyLab/Heterochromatin/PacBio_scripts/Revised_scripts/D_virilis_satellites/Intra_inter_species_sequencing/ForR/sample.identities', header=F)
sample_names <- sample_identities$V1
sample_identities$V1 <- NULL
colnames(sample_identities) <- "species"
rownames(sample_identities) <- sample_names
# merge in the species identities so we can easily categorize them
data_classified <- merge (sample_identities, data2_normalized_sorted, by=0)
sample.labels <- sapply(strsplit(data_classified$Row.names, "_"), '[', 1)
data_classified$Row.names <- sample.labels
data_classified[,1:5]
library(ggplot2)
data_classified <- data_classified[-11,]
ggplot(data = data_classified, aes(x = species, y = AAACTAC*7)) +
geom_boxplot() +
geom_jitter(color="coral2") +
theme_bw() +
xlab("Species") +
ylab("total AAACTAC span (bp)") +
theme(axis.text.x = element_text(hjust = 1, size=12)) +
theme(text = element_text(size=12))
ggplot(data = data_classified, aes(x = species, y = total_bp)) +
geom_boxplot() +
geom_jitter(color="tomato") +
xlab("Species") +
ylab("total satellite span (bp)")
kmers_of_interest <- c("AAACTAC", "AAACTAT", "AAATTAC", "AAACAAC")
pca.data <- prcomp(data_classified[, kmers_of_interest], scale.=T)
library(ggbiplot)
g <- ggbiplot(pca.data, obs.scale = 1, var.scale = 1, groups = data_classified$species, var.axes = F, alpha=0.8) #labels=data3$Row.names
g <- g + scale_color_discrete(name='')
g <- g + theme(legend.direction='horizontal', legend.position='top')
print(g)
# let's use the whole dataset and see how the PCA looks
pca.data <- prcomp(data_classified[,3:22], scale.=T)
g <- ggbiplot(pca.data, obs.scale = 1, var.scale = 1, groups = data_classified$species, var.axes = F, alpha=0.8)
g <- g + scale_color_discrete(name='')
g <- g + theme(legend.direction='horizontal', legend.position='top')
print(g)
data_virilis <- subset(data_classified, species=="vir")
vir_names <- data_virilis$Row.names
rownames(data_virilis) <- vir_names
data_virilis[,kmers_of_interest]*7
totals_vir <- rowSums(data_virilis[,kmers_of_interest]*7)
# which sample has the least amount of satellites and which has the most?
totals_vir[which(totals_vir == max(totals_vir))]
totals_vir[which(totals_vir == min(totals_vir))]
# Get the mean amounts of each satellites.
mean(data_virilis$AAACTAC)
mean(data_virilis$AAACAAC)
mean(data_virilis$AAACTAT)
mean(data_virilis$AAATTAC)
# bring in the geographical origin
virilis_ori <- read.csv('/Users/jullienflynn/Documents/AndyLab/Heterochromatin/PacBio_scripts/Revised_scripts/D_virilis_satellites/Intra_inter_species_sequencing/ForR/virilis_origins.csv')
virilis_ori[!apply(virilis_ori == "", 1, all),]
virilis_ori$Sample <- as.vector(virilis_ori$Sample)
sample.labels <- sapply(strsplit(virilis_ori$Sample, "_"), '[', 1)
virilis_ori$Sample <- sample.labels
data_virilis_ori <- merge(data_virilis, virilis_ori, by.x=1, by.y=1)
data_virilis_ori$Origin <- factor(data_virilis_ori$Origin, levels = c("Africa", "USSR", "CHINA", "JAPAN", "N.Amer", "C.Amer", "S.Amer", "Unknown"))
(plot_data <- data_virilis_ori[, c("Row.names", "total_bp", "Origin", "AAACTAC", "AAACTAT", "AAATTAC")])
options(scipen=-10)
ggplot(plot_data, aes(y=AAATTAC*7, x=Origin)) +
geom_point(size=2, color='coral2') +
theme_bw() +
geom_text(aes(label=Row.names),hjust=0.5, vjust=1) +
ylab("total AAATTAC span (bp)") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size=12)) +
theme(text = element_text(size=12))
virilis_DINE <- read.csv ('/Users/jullienflynn/Documents/AndyLab/Heterochromatin/PacBio_scripts/Revised_scripts/D_virilis_satellites/Intra_inter_species_sequencing/ForR/virilis_DINE.csv')
data_virilis_DINE <- merge(virilis_DINE, data_virilis, by.x=1, by.y=1)
ggplot(data_virilis_DINE, aes(y=AAACTAC, x=DINE)) +
geom_point(size=2) +
geom_text(aes(label=Strain),hjust=0.5, vjust=1.0) +
theme_bw() +
theme(text = element_text(size=12)
virilis_DINE <- read.csv ('/Users/jullienflynn/Documents/AndyLab/Heterochromatin/PacBio_scripts/Revised_scripts/D_virilis_satellites/Intra_inter_species_sequencing/ForR/virilis_DINE.csv')
data_virilis_DINE <- merge(virilis_DINE, data_virilis, by.x=1, by.y=1)
ggplot(data_virilis_DINE, aes(y=AAACTAC, x=DINE)) +
geom_point(size=2) +
geom_text(aes(label=Strain),hjust=0.5, vjust=1.0) +
theme_bw() +
theme(text = element_text(size=12))
data_americana <- subset(data_classified, species=="amer")
# get the mean of the abundant satellites
mean(data_americana$AAACTAC)
mean(data_americana$AAACAAC)
americana_fus <- read.csv('/Users/jullienflynn/Documents/AndyLab/Heterochromatin/PacBio_scripts/Revised_scripts/D_virilis_satellites/Intra_inter_species_sequencing/ForR/americana_fusion_status.csv')
americana_fus$Sample <- as.vector(americana_fus$Sample)
sample.labels <- sapply(strsplit(americana_fus$Sample, "_"), '[', 1)
americana_fus$Sample <- sample.labels
data_amer_fus <- merge(data_americana, americana_fus, by.x=1, by.y=1)
data_amer_fus$Status <- as.factor(data_amer_fus$Status)
amer_names <- data_amer_fus$Row.names
rownames(data_amer_fus) <- amer_names
data_amer_fus[,kmers_of_interest]*7
# note the inbred genome strain also has the lowest amount, G96.
# Let's do PCAs.
pca.data <- prcomp(data_amer_fus[, kmers_of_interest], scale.=T)
g <- ggbiplot(pca.data, obs.scale = 1, var.scale = 1, groups = data_amer_fus$Status, var.axes = F, alpha=0.8)
g <- g + scale_color_discrete(name='') +
geom_point(aes(colour=data_amer_fus$Status ), size=4)
g <- g + theme(legend.direction='horizontal', legend.position='top')
print(g)
g <- ggbiplot(pca.data, obs.scale = 1, var.scale = 1, groups = data_amer_fus$Status, var.axes = F, alpha=0.8)
g <- g + scale_color_discrete(name='') +
geom_point(aes(colour=data_amer_fus$Status ), size=4)
g <- g + theme(legend.direction='horizontal', legend.position='top')
print(g)
pca.data <- prcomp(data_amer_fus[, 3:22], scale.=T)
g <- ggbiplot(pca.data, obs.scale = 1, var.scale = 1, groups = data_amer_fus$Status, var.axes = F, alpha=0.8) + theme_bw()
g <- g + scale_color_discrete(name='') +
geom_point(aes(colour=data_amer_fus$Status ), size=4)
g <- g + theme(legend.direction='horizontal', legend.position='top')
print(g)
g <- ggbiplot(pca.data, obs.scale = 1, var.scale = 1, groups = data_virilis_ori$Origin, var.axes = F, alpha=0.8)
g <- g + scale_color_discrete(name='')
g <- g + theme(legend.direction='horizontal', legend.position='top')
print(g)
pca.data <- prcomp(data_virilis_ori[, 4:23], scale.=T)
g <- ggbiplot(pca.data, obs.scale = 1, var.scale = 1, groups = data_virilis_ori$Origin, var.axes = F, alpha=0.8)
g <- g + scale_color_discrete(name='')
g <- g + theme(legend.direction='horizontal', legend.position='top')
print(g)
pca.data <- prcomp(data_virilis_ori[, kmers_of_interest], scale.=T)
g <- ggbiplot(pca.data, obs.scale = 1, var.scale = 1, groups = data_virilis_ori$Origin, var.axes = F, alpha=0.8)
g <- g + scale_color_discrete(name='')
g <- g + theme(legend.direction='horizontal', legend.position='top')
print(g)
data_virilis_ori$Origin <- factor(data_virilis_ori$Origin, levels = c("Africa", "USSR", "CHINA", "JAPAN", "N.Amer", "C.Amer", "S.Amer", "Unknown"))
pca.data <- prcomp(data_virilis_ori[, kmers_of_interest], scale.=T)
pca.data[,1:5]
head(pca.data)
g <- ggbiplot(pca.data, obs.scale = 1, var.scale = 1, groups = data_virilis_ori$Origin, var.axes = F, alpha=0.8)
g <- g + scale_color_discrete(name='')
g <- g + theme(legend.direction='horizontal', legend.position='top')
print(g)
options(scipen=999)
pca.data <- prcomp(data_virilis_ori[, kmers_of_interest], scale.=T)
g <- ggbiplot(pca.data, obs.scale = 1, var.scale = 1, groups = data_virilis_ori$Origin, var.axes = F, alpha=0.8)
g <- g + scale_color_discrete(name='')
g <- g + theme(legend.direction='horizontal', legend.position='top')
print(g)
data2 <- read.table ('/Users/jullienflynn/Documents/AndyLab/Heterochromatin/PacBio_scripts/Revised_scripts/D_virilis_satellites/Intra_inter_species_sequencing/ForR/Dlummei.rep.compiled', header=T)
samples_depth <- read.csv ('/Users/jullienflynn/Documents/AndyLab/Heterochromatin/PacBio_scripts/Revised_scripts/D_virilis_satellites/Intra_inter_species_sequencing/ForR/samples_depth.csv')
sample_names <- samples_depth$Sample
samples_depth[,1] <- NULL
rownames(samples_depth) <- sample_names
#now bring in the compiled data.
data2 <- read.delim ('/Users/jullienflynn/Documents/AndyLab/Heterochromatin/PacBio_scripts/Revised_scripts/D_virilis_satellites/Intra_inter_species_sequencing/ForR/Dvir_diversity.rep.compiled')
kmer.labels <- sapply(strsplit(colnames(data2), "\\."), '[', 1)
colnames(data2) <- kmer.labels
samples <- as.vector(data2$lines)
samples2 <- sapply(strsplit(samples, "[.]"), '[', 1)
#samples2
data2[,1] <- NULL
rownames(data2) <- samples2
# put the depths in the same order as the dataframe
data2_ordered <- data2[ order(row.names(data2)), ]
samples_depth_ordered <- samples_depth[ order(row.names(samples_depth)), ]
# now normalize the data
data2_normalized <- data2_ordered/samples_depth_ordered
# now sort the data
kmer_means <- colMeans(data2)
data2_normalized_sorted <- data2_normalized[,order(kmer_means, decreasing=T)]
# now bring in the sample identities
sample_identities <- read.table ('/Users/jullienflynn/Documents/AndyLab/Heterochromatin/PacBio_scripts/Revised_scripts/D_virilis_satellites/Intra_inter_species_sequencing/ForR/sample.identities', header=F)
sample_names <- sample_identities$V1
sample_identities$V1 <- NULL
colnames(sample_identities) <- "species"
rownames(sample_identities) <- sample_names
# merge in the species identities so we can easily categorize them
data_classified <- merge (sample_identities, data2_normalized_sorted, by=0)
sample.labels <- sapply(strsplit(data_classified$Row.names, "_"), '[', 1)
data_classified$Row.names <- sample.labels
data_classified[,1:5]
kmers_of_interest <- c("AAACTAC", "AAACTAT", "AAATTAC", "AAACAAC")
data_virilis <- subset(data_classified, species=="vir")
vir_names <- data_virilis$Row.names
rownames(data_virilis) <- vir_names
data_virilis[,kmers_of_interest]*7
totals_vir <- rowSums(data_virilis[,kmers_of_interest]*7)
# which sample has the least amount of satellites and which has the most?
totals_vir[which(totals_vir == max(totals_vir))]
totals_vir[which(totals_vir == min(totals_vir))]
# Get the mean amounts of each satellites.
mean(data_virilis$AAACTAC)
mean(data_virilis$AAACAAC)
mean(data_virilis$AAACTAT)
mean(data_virilis$AAATTAC)
virilis_ori <- read.csv('/Users/jullienflynn/Documents/AndyLab/Heterochromatin/PacBio_scripts/Revised_scripts/D_virilis_satellites/Intra_inter_species_sequencing/ForR/virilis_origins.csv')
virilis_ori[!apply(virilis_ori == "", 1, all),]
virilis_ori$Sample <- as.vector(virilis_ori$Sample)
sample.labels <- sapply(strsplit(virilis_ori$Sample, "_"), '[', 1)
virilis_ori$Sample <- sample.labels
data_virilis_ori <- merge(data_virilis, virilis_ori, by.x=1, by.y=1)
virilis_ori <- read.csv('/Users/jullienflynn/Documents/AndyLab/Heterochromatin/PacBio_scripts/Revised_scripts/D_virilis_satellites/Intra_inter_species_sequencing/ForR/virilis_origins.csv')
virilis_ori[!apply(virilis_ori == "", 1, all),]
virilis_ori$Sample <- as.vector(virilis_ori$Sample)
sample.labels <- sapply(strsplit(virilis_ori$Sample, "_"), '[', 1)
virilis_ori$Sample <- sample.labels
data_virilis_ori <- merge(data_virilis, virilis_ori, by.x=1, by.y=1)
data_virilis_ori
data_virilis_ori$Origin <- factor(data_virilis_ori$Origin, levels = c("Africa", "Russia", "China", "Japan", "N.Amer", "C.Amer", "S.Amer", "Genome.strain"))
options(scipen=999)
(plot_data <- data_virilis_ori[, c("Row.names", "total_bp", "Origin", "AAACTAC", "AAACTAT", "AAATTAC")])
virilis_ori <- read.csv('/Users/jullienflynn/Documents/AndyLab/Heterochromatin/PacBio_scripts/Revised_scripts/D_virilis_satellites/Intra_inter_species_sequencing/ForR/virilis_origins.csv')
virilis_ori
virilis_ori <- read.csv('/Users/jullienflynn/Documents/AndyLab/Heterochromatin/PacBio_scripts/Revised_scripts/D_virilis_satellites/Intra_inter_species_sequencing/ForR/virilis_origins.csv')
virilis_ori
virilis_ori[!apply(virilis_ori == "", 1, all),]
virilis_ori$Sample <- as.vector(virilis_ori$Sample)
sample.labels <- sapply(strsplit(virilis_ori$Sample, "_"), '[', 1)
virilis_ori$Sample <- sample.labels
data_virilis_ori <- merge(data_virilis, virilis_ori, by.x=1, by.y=1)
data_virilis_ori[,1:5]
data_virilis_ori$Origin <- factor(data_virilis_ori$Origin, levels = c("Africa", "Russia", "China", "Japan", "N.Amer", "C.Amer", "S.Amer", "Genome.strain"))
options(scipen=999)
(plot_data <- data_virilis_ori[, c("Row.names", "total_bp", "Origin", "AAACTAC", "AAACTAT", "AAATTAC")])
data_virilis_ori <- data_virilis_ori[-2,]
(plot_data <- data_virilis_ori[, c("Row.names", "total_bp", "Origin", "AAACTAC", "AAACTAT", "AAATTAC")])
options(scipen=-10)
ggplot(plot_data, aes(y=AAATTAC*7, x=Origin)) +
geom_point(size=2, color='coral2') +
theme_bw() +
geom_text(aes(label=Row.names),hjust=0.5, vjust=1) +
ylab("total AAATTAC span (bp)") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size=12)) +
theme(text = element_text(size=12))
library(ggplot2)
ggplot(plot_data, aes(y=AAATTAC*7, x=Origin)) +
geom_point(size=2, color='coral2') +
theme_bw() +
geom_text(aes(label=Row.names),hjust=0.5, vjust=1) +
ylab("total AAATTAC span (bp)") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size=12)) +
theme(text = element_text(size=12))
ggplot(plot_data, aes(y=AAACTAC*7, x=Origin)) +
geom_point(size=2, color='coral2') +
theme_bw() +
geom_text(aes(label=Row.names),hjust=0.5, vjust=1.0) +
ylab("total AAACTAC span (bp)") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size=12)) +
theme(text = element_text(size=12))
ggplot(plot_data, aes(y=AAACTAT*7, x=Origin)) +
geom_point(size=2, color='coral2') +
theme_bw() +
geom_text(aes(label=Row.names),hjust=0.5, vjust=1.0) +
ylab("total AAACTAT span (bp)") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size=12)) +
theme(text = element_text(size=12))
depth <- c(15.506, 3.894)
names(depth) <- c("Dvir_disks", "Dvir_flies")
data2 <- read.delim ('/Users/jullienflynn/Documents/AndyLab/Heterochromatin/PacBio_scripts/Revised_scripts/D_virilis_satellites/Polyteny/ForR/Dvir_polyteny.rep.compiled')
kmer.labels <- sapply(strsplit(colnames(data2), "\\."), '[', 1)
colnames(data2) <- kmer.labels
samples <- as.vector(data2$lines)
samples2 <- sapply(strsplit(samples, "[.]"), '[', 1)
data2[,1] <- NULL
rownames(data2) <- samples2
# now normalize the data
data2_normalized <- data2/depth
# now sort the data
kmer_means <- colMeans(data2)
data2_normalized_sorted <- data2_normalized[,order(kmer_means, decreasing=T)]
data2_normalized_sorted[,1:10]
# use the embryos - make a data frame so I can use it later.
kmers_of_interest <- c("AAACTAC", "AAACTAT", "AAATTAC")
post_qfiltering_flies <- data2_normalized_sorted[1, kmers_of_interest]
data2_normalized_sorted[, kmers_of_interest]
# total Mb of repeats
(sum(data2_normalized_sorted[1, kmers_of_interest])*7)/10^6
(sum(data2_normalized_sorted[2, kmers_of_interest])*7)/10^6
depth <- c(18.44, 4.597)
names(depth) <- c("Dvir_disks", "Dvir_flies")
data3 <- read.delim ('/Users/jullienflynn/Documents/AndyLab/Heterochromatin/PacBio_scripts/Revised_scripts/D_virilis_satellites/Polyteny/ForR/Dvir_polyteny.allreads.rep.compiled')
kmer.labels <- sapply(strsplit(colnames(data3), "\\."), '[', 1)
colnames(data3) <- kmer.labels
samples <- as.vector(data3$lines)
samples2 <- sapply(strsplit(samples, "[.]"), '[', 1)
data3[,1] <- NULL
rownames(data3) <- samples2
data3[,1:10]
# now normalize the data
data3_normalized <- data3/depth
# now sort the data
kmer_means <- colMeans(data3)
data3_normalized_sorted <- data3_normalized[,order(kmer_means, decreasing=T)]
data3_normalized_sorted[,1:10]
no_qfiltering <- data3_normalized_sorted[1, kmers_of_interest]
no_qfiltering
rownames (no_qfiltering) <- c("no-filter")
rownames (post_qfiltering_flies) <- c("q-filter")
post_qfiltering_flies
filter_compare <- rbind(no_qfiltering, post_qfiltering_flies)
data_subset <- rbind(data3_normalized_sorted[c(1,2), kmers_of_interest], post_qfiltering_flies)
data_subset
kmer_abundances <- c()
kmer_names <- c()
sample_names <- c()
sample_category <- c()
library(stringr)
# look at this in ggplot
for (j in 1:ncol(data_subset)) {
for (i in 1:nrow(data_subset)) {
kmer_abundances <- c(kmer_abundances, data_subset[i,j]*7)
kmer_names <- c(kmer_names, colnames(data_subset)[j])
x <- rownames(data_subset)[i]
y <- substr(x, 6, str_length(x))
sample_names <- c(sample_names, x)
sample_category <- c(sample_category, y)
}
}
polyteny_fig <- data.frame(sample_names, sample_category, kmer_names, kmer_abundances)
polyteny_fig
wei <- data.frame( "sample_names" = c("Dvir_wei", "Dvir_wei", "Dvir_wei"), "sample_category" = c("wei", "wei", "wei"), "kmer_names" = c("AAACTAC", "AAACTAT", "AAATTAC"), "kmer_abundances" = c(7099097, 490963, 540644))
str(wei)
wei
merged_polyteny <- rbind (polyteny_fig, wei)
merged_polyteny
ggplot(data = merged_polyteny, aes(x = kmer_names, y = kmer_abundances, fill = sample_category )) +
geom_bar(stat = "identity", position = "dodge") +
theme_bw() +
scale_fill_brewer(palette="Royal2")
ylab ("Amount (bp)") +
theme(text = element_text(size=12))
library(wesanderson)
install.packages(wesanderson)
install.packages("wesanderson")
library(wesanderson)
ggplot(data = merged_polyteny, aes(x = kmer_names, y = kmer_abundances, fill = sample_category )) +
geom_bar(stat = "identity", position = "dodge") +
theme_bw() +
scale_fill_manual(values = wes_palette("Royal2", n = 4)) +
ylab ("Amount (bp)") +
theme(text = element_text(size=12))
ggplot(data = merged_polyteny, aes(x = kmer_names, y = kmer_abundances, fill = sample_category )) +
geom_bar(stat = "identity", position = "dodge") +
theme_bw() +
#scale_fill_manual(values = wes_palette("Royal2", n = 4)) +
ylab ("Amount (bp)") +
theme(text = element_text(size=12))
ggplot(data = merged_polyteny, aes(x = kmer_names, y = kmer_abundances, fill = sample_category )) +
geom_bar(stat = "identity", position = "dodge") +
theme_bw()
merged_polyteny
ggplot(data = merged_polyteny, aes(x = kmer_names, y = kmer_abundances, fill = sample_category )) +
geom_bar(stat = "identity", position = "dodge") +
theme_bw() +
scale_fill_manual(values = wes_palette("Royal2", n = 4)) +
ylab ("Amount (bp)") +
theme(text = element_text(size=12))
ggplot(data = merged_polyteny, aes(x = kmer_names, y = kmer_abundances, fill = sample_category )) +
geom_bar(stat = "identity", position = "dodge") +
theme_bw() +
#scale_fill_manual(values = wes_palette("Royal2", n = 4)) +
ylab ("Amount (bp)") +
theme(text = element_text(size=12))
options(scipen=999)
ggplot(data = merged_polyteny, aes(x = kmer_names, y = kmer_abundances, fill = sample_category )) +
geom_bar(stat = "identity", position = "dodge") +
theme_bw() +
scale_fill_manual(values = wes_palette("Royal2", n = 4)) +
ylab ("Amount (bp)") +
theme(text = element_text(size=12))
ggplot(data = merged_polyteny, aes(x = kmer_names, y = kmer_abundances, fill = sample_category )) +
geom_bar(stat = "identity", position = "dodge") +
theme_bw() +
scale_fill_manual(values = wes_palette("Darjeeling2", n = 4)) +
ylab ("Amount (bp)") +
theme(text = element_text(size=12))
my_way <-  read.delim("~/Documents/AndyLab/Heterochromatin/PacBio_genomes/simulate_genome/Dvir.PacBio.phobos.simple.out", header=FALSE)
colnames (my_way) <- c("kmer", "count")
# summarize the sequences
my_way.simple <- tapply(my_way$count, my_way$kmer, sum)
head(my_way.simple)
my_way_sorted <- sort(my_way.simple, decreasing = T)
my_way_sorted[1:10]
depth <- 10
my_way_sorted_norm <- my_way_sorted/depth
my_way_sorted_norm[c("AAACTAC", "AAATTAC", "AAACTAT")]/1E6
# 21.5 Mb, 4.08 Mb, 2.86 Mb
my_way_sorted_norm[1:50]
sum(my_way_sorted_norm[1:50])
repeats.percents <- read.delim("/Users/jullienflynn/Documents/AndyLab/Heterochromatin/PacBio_scripts/Revised_scripts/D_virilis_satellites/Simulations/Mock_genome/repeats.found.percents", header=FALSE)
colnames(repeats.percents) <- c("sat", "perc", "bp")
repeats.percents$sat <- as.factor(repeats.percents$sat)
repeats.percents
library(ggplot2)
ggplot (repeats.percents, aes(x=perc, y=bp, colour=sat)) +
geom_point(size=3)
repeats.percents
NCRF_amounts <- read.csv("~/Documents/AndyLab/Heterochromatin/PacBio_scripts/Revised_scripts/D_virilis_satellites/Simulations/Mock_genome/simulation_results_final.csv", header=T)
NCRF_amounts
library(ggplot2)
ggplot(NCRF_amounts) +
geom_bar(aes(y=Amount, x=Satellite, fill=factor(Category, levels=c("actual", "found_NCRF", "found_KP"))), stat="identity", position = "dodge") +
theme_bw() +
#scale_fill_manual(values = c("#999999", "#FF6600", "#FF33CC")) +
#scale_x_discrete(limits = NCRF_amounts$Satellite) +
theme(legend.title=element_blank()) +
theme(text = element_text(size=14)) +
ylab("Amount (bp)")
ggplot(NCRF_amounts) +
geom_bar(aes(y=Amount, x=Satellite, fill=factor(Category, levels=c("actual", "found_NCRF", "found_KP"))), stat="identity", position = "dodge") +
theme_bw() +
scale_fill_manual(values = wes_palette("Darjeeling2", n = 4)) +
theme(legend.title=element_blank()) +
theme(text = element_text(size=14)) +
ylab("Amount (bp)")
strand_bias <- read.csv(file="/Users/jullienflynn/Documents/AndyLab/Heterochromatin/PacBio_scripts/Revised_scripts/D_virilis_satellites/LongRead_kseek_Phobos/ForR/Strand_bias_summary2.csv", header=T)
Pacbio_strand <- subset(strand_bias, Platform=="PacBio_real")
ggplot(Pacbio_strand) +
geom_bar(aes(y=Percent, x=Satellite, fill=factor(Strand, levels=c("neg", "pos"))), stat="identity") +
theme_bw() +
scale_fill_manual(values = wes_palette("Darjeeling2", n = 2)) +
scale_x_discrete(limits = Pacbio_strand$Satellite) +
theme(legend.title=element_blank()) +
theme(text = element_text(size=14), axis.text.x = element_text(angle=45, hjust=1))
Pacbio_sim <- subset(strand_bias, Platform=="PacBio_sim")
ggplot(Pacbio_sim) +
geom_bar(aes(y=Percent, x=Satellite, fill=factor(Strand, levels=c("neg", "pos"))), stat="identity") +
theme_bw() +
scale_fill_manual(values = wes_palette("Darjeeling2", n = 2)) +
scale_x_discrete(limits = Pacbio_sim$Satellite) +
theme(legend.title=element_blank()) +
theme(text = element_text(size=14), axis.text.x = element_text(angle=45, hjust=1))
Nanopore_real <- subset(strand_bias, Platform=="Nanopore_real")
ggplot(Nanopore_real) +
geom_bar(aes(y=Percent, x=Satellite,  fill=factor(Strand, levels=c("neg", "pos"))), stat="identity", width = 0.5) +
theme_bw() +
scale_x_discrete(limits = Nanopore_real$Satellite) +
theme(legend.title=element_blank()) +
theme(text = element_text(size=14), axis.text.x = element_text(angle=45, hjust=1))
ggplot(Nanopore_real) +
geom_bar(aes(y=Percent, x=Satellite,  fill=factor(Strand, levels=c("neg", "pos"))), stat="identity", width = 0.5) +
theme_bw() +
scale_fill_manual(values = wes_palette("Darjeeling2", n = 2)) +
scale_x_discrete(limits = Nanopore_real$Satellite) +
theme(legend.title=element_blank()) +
theme(text = element_text(size=14), axis.text.x = element_text(angle=45, hjust=1))
ggplot(Nanopore_real) +
geom_bar(aes(y=Percent, x=Satellite,  fill=factor(Strand, levels=c("neg", "pos"))), stat="identity", width = 0.8) +
theme_bw() +
scale_fill_manual(values = wes_palette("Darjeeling2", n = 2)) +
scale_x_discrete(limits = Nanopore_real$Satellite) +
theme(legend.title=element_blank()) +
theme(text = element_text(size=14), axis.text.x = element_text(angle=45, hjust=1))
ggplot(Nanopore_real) +
geom_bar(aes(y=Percent, x=Satellite,  fill=factor(Strand, levels=c("neg", "pos"))), stat="identity", width = 0.6) +
theme_bw() +
scale_fill_manual(values = wes_palette("Darjeeling2", n = 2)) +
scale_x_discrete(limits = Nanopore_real$Satellite) +
theme(legend.title=element_blank()) +
theme(text = element_text(size=14), axis.text.x = element_text(angle=45, hjust=1))
ggplot(Pacbio_sim) +
geom_bar(aes(y=Percent, x=Satellite, fill=factor(Strand, levels=c("neg", "pos"))), stat="identity", width = 0.6) +
theme_bw() +
scale_fill_manual(values = wes_palette("Darjeeling2", n = 2)) +
scale_x_discrete(limits = Pacbio_sim$Satellite) +
theme(legend.title=element_blank()) +
theme(text = element_text(size=14), axis.text.x = element_text(angle=45, hjust=1))
ggplot(Pacbio_sim) +
geom_bar(aes(y=Percent, x=Satellite, fill=factor(Strand, levels=c("neg", "pos"))), stat="identity", width = 0.4) +
theme_bw() +
scale_fill_manual(values = wes_palette("Darjeeling2", n = 2)) +
scale_x_discrete(limits = Pacbio_sim$Satellite) +
theme(legend.title=element_blank()) +
theme(text = element_text(size=14), axis.text.x = element_text(angle=45, hjust=1))
ggplot(Pacbio_strand) +
geom_bar(aes(y=Percent, x=Satellite, fill=factor(Strand, levels=c("neg", "pos"))), stat="identity", width = 0.5) +
theme_bw() +
scale_fill_manual(values = wes_palette("Darjeeling2", n = 2)) +
scale_x_discrete(limits = Pacbio_strand$Satellite) +
theme(legend.title=element_blank()) +
theme(text = element_text(size=14), axis.text.x = element_text(angle=45, hjust=1))
Dvir_reps <-  read.delim("/Users/jullienflynn/Documents/AndyLab/Heterochromatin/PacBio_scripts/Revised_scripts/D_virilis_satellites_analysis_backup/LongRead_kseek_Phobos/ForR/D_virilis.all.phobos.simple.out", header=FALSE)
kseek_data <- read.csv("/Users/jullienflynn/Documents/AndyLab/Heterochromatin/PacBio_scripts/Revised_scripts/D_virilis_satellites/Polyteny/ForR/melpolyteny.rep.compiled.GCcorr")
library(wesanderson)
